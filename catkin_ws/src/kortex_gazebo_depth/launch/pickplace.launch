<launch>

    <!-- Arguments -->
    <!-- Start the GUIs -->
    <arg name="start_gazebo" default="true"/>
    <arg name="gazebo_gui"   default ="true"/>
    <arg name="start_rviz" default="false"/>
    
    <!-- Initial position in Gazebo -->
    <arg name="x0" default="-0.13"/>
    <arg name="y0" default="-0.1"/>
    <arg name="z0" default="0.6"/>

    <!-- Arm and gripper type -->
    <arg name="arm" default="gen3"/>
    <arg name="gripper" default="custom" />
    <arg name="robot_name" default="my_$(arg arm)"/>

    <!-- Use trajectory controllers and MoveIt! -->
    <arg name="use_trajectory_controller" default="true"/>

    <!-- Gazebo parameters -->
    <arg name="use_sim_time" default="true"/>
    <arg name="debug" default="false" />
    <arg name="paused" default="$(arg use_trajectory_controller)"/>
    <arg name="world" default="rl_test.world"/>
    
    <!-- Start Gazebo -->
    <include file="$(find kortex_gazebo_depth)/launch/start_gazebo.launch" if="$(arg start_gazebo)">
	    <arg name="world" value="$(arg world)"/>
            <arg name="gui" value="$(arg gazebo_gui)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="debug" value="$(arg debug)"/>
            <arg name="paused" value="$(arg paused)"/>
    </include>

    <group ns="$(arg robot_name)">

        <!-- Load the description for the robot -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find kortex_gazebo_depth)/robots/gen3_camera_custom_gripper.xacro sim:=true"/>

        <!-- Spawn the robot in Gazebo -->
        <!-- TODO Find cleaner way to set the starting position and that will work for other arms -->
        <!-- With gripper -->


        <!-- Load controller configuration file from kortex_control package -->
        <rosparam file="$(find kortex_control)/arms/$(arg arm)/config/joint_position_controllers.yaml" command="load"/>
        <rosparam file="$(find kortex_gazebo_depth)/grippers/$(arg gripper)/config/gripper_action_controller_parameters.yaml" command="load"
            />

        <!-- Start the controllers -->

        <!-- The trajectory controller -->
        <group if="$(arg use_trajectory_controller)">

            <!-- With gripper -->
            <node name="$(arg arm)_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
                output="screen" args="$(arg arm)_joint_trajectory_controller joint_state_controller $(arg gripper)_gripper_controller"
                />

        </group>

        <!-- Without the trajectory controller (individual controllers) -->
        <group unless="$(arg use_trajectory_controller)">

            
            <!-- With gripper -->
            <node name="$(arg arm)_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
                output="screen" args="$(arg arm)_joint_trajectory_controller joint_state_controller $(arg gripper)_gripper_controller"
                />

        </group>

        <!-- Start robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen" />


        <!-- Start RViz -->
        <node name="rviz" pkg="rviz" type="rviz" if="$(arg start_rviz)"/> 


        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -param /my_gen3/robot_description -model $(arg robot_name) -x $(arg x0) -y $(arg y0) -z $(arg z0)
                -robot_namespace $(arg robot_name)
                -J joint_1 0
                -J joint_2 -0.35
                -J joint_3 3.14
                -J joint_4 -2.00
                -J joint_5 0
                -J joint_6 -1.00
                -J joint_7 1.57 "
           />
    
    </group>

</launch>
